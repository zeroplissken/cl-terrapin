= Terrapin, not turtle
--------------------

Terrapin is just a quick thing to make non-realtime turtle graphics with common lisp. 

By non realtime I mean I can't be bothered to deal with SDL2 right now so I'm just rendering it all to a .png. It uses https://www.xach.com/lisp/vecto/[Vecto] under the flimsy hood.

I'm making this so I can work through https://mitpress.mit.edu/9780262510370/turtle-geometry/[Turtle Geometry by Harold Abelson and Andrea A. diSessa]. I have some ideas for further down the road, depending on how much I enjoy this method of drawing squiggles.

== Usage
``(init 500 500 "poop.png")
(terp (forward 100) (right 34) (poly 20 60) 
	(dotimes (i 20)
		(toggle-pen)
		(left 30)
		(forward (+ (* 3 i) 30))
		(right 13)
		(back 18)))``

Call ``(init <width> <height> <output path>)`` first. Then use ``(terp @body)`` to direct your terrapin around the canvas.

=== Commands
`(forward|back <steps>)` +
`(left|right <degrees>)` +
`(pen-up|pen-down|toggle-pen)` +
`(goto <x> <y>)` +

`(circle <radius>)` +
`(arcl-l <radius>)` +
`(arc-r <radius>)` +
`(square <size>)` +
`(quad <side1> <side 2>)` +
`(poly <segment length> <degrees>)` +
`(triangle <segment length>)` 

You can, of course, intersperse Vecto procedures in the terp program as well. They won't affect the position of the turtle you're using.

A list of advanced commands can be found https://novaspec.org/cl/[here].

go terps btw
